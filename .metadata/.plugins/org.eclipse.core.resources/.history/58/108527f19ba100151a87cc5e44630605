import javax.swing.*;
import javax.swing.table.*;

import java.sql.*;

/**
 * This class create JTable from Database table. User program needs to specify
 * database connection and corresponding atable name.
 * 
 * @author Hemraj
 */
public class TableToJTable extends JTable {
	// private String table;
	private Connection con;

	public TableToJTable() {
		this.con = con;
	}

	/**
	 * This method return JTable object created from Database table having same
	 * data asn structure as in original table into database.
	 * 
	 * @param table
	 *            Name of the database table to be coverted to JTable
	 * @return JTable object that consist of data and structure of Database
	 *         table
	 * @throws java.lang.Exception
	 *             Original object is deferent, e.i either SQLException or
	 *             NullPointerException
	 */
	public JTable getTable() throws Exception {

		try {

			Class.forName("org.sqlite.JDBC");
			con = DriverManager.getConnection("jdbc:sqlite:test.db");

		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ": " + e.getMessage());
			System.exit(0);
		}

		JTable t1 = new JTable();
		DefaultTableModel dm = new DefaultTableModel();
		Statement st = con.createStatement();
		ResultSet rs = st.executeQuery("select * from gravityPoint");
		ResultSetMetaData rsmd = rs.getMetaData();
		// Coding to get columns-
		int cols = rsmd.getColumnCount();
		String c[] = new String[cols];
		for (int i = 0; i < cols; i++) {
			c[i] = rsmd.getColumnName(i + 1);
			dm.addColumn(c[i]);
		}
		// get data from rows
		Object row[] = new Object[cols];
		while (rs.next()) {
			for (int i = 0; i < cols; i++) {
				row[i] = rs.getString(i + 1);
			}
			dm.addRow(row);
		}
		t1.setModel(dm);
		con.close();
		return t1;
	}

}