import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.ImageObserver;

public class DraggableLogoComponent 
	extends DraggableComponent implements ImageObserver {

    protected Image image;
    private boolean autoSize = false;
    private Dimension autoSizeDimension = new Dimension(0, 0);

    public DraggableLogoComponent() {
        super();
        setLayout(null);
        setBackground(Color.black);
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;
        g2d.clearRect(0, 0, getWidth(), getHeight());
        if (image != null) {
//            setAutoSizeDimension();
            g2d.drawImage(image, 0, 0, getWidth(), getHeight(), this);
        } else {
            g2d.setColor(getBackground());
            g2d.fillRect(0, 0, getWidth(), getHeight());
        }
    }
    
    public boolean imageUpdate(Image img, int infoflags, int x, int y, int w, int h) {
        if (infoflags == ALLBITS) {
            repaint();
//            setAutoSizeDimension();
            return false;
        }
        return true;
    }
    
//    private void setAutoSizeDimension() {
//    	private Dimension adaptDimension(Dimension source, Dimension dest);
//    }
    public void setImage(Image image) {
        this.image = image;
        repaint();
//        setAutoSizeDimension();
    }
    
    public void setImage(String image) {
        setImage(Toolkit.getDefaultToolkit().getImage(image));
    }
    
    public Image getImage() {
        return image;
    }
    
    public void setAutoSize(boolean autoSize) {
        this.autoSize = autoSize;
    }
    
    public boolean isAutoSize() {
        return autoSize;
    }
    
    public void grow(int pixels) {
        double ratio = getWidth() / getHeight();
        setSize(getSize().width + pixels, (int) (getSize().height + (pixels / ratio)));
    }
}
    