import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;


public class BasicFrame extends JFrame {
	
	   public static JFrame frame;
	   public static JPanel dragPanel;
	
	public BasicFrame() {
		frame = new JFrame("Photo Album");
        frame.setVisible(true);
        frame.setSize(800, 600);
        frame.setLayout(new BorderLayout());

        frame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        });

        dragPanel = new JPanel();
        dragPanel.setLayout(null);
        frame.add(dragPanel, BorderLayout.CENTER);
        

        /*Is good create a Thread to manipulate Forms and Files. In this particular
         * case an <b>invokeLater</b> is needed becaouse all Forms graphics operations
         * needs to be elaborated after pending events are processed
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                loadLogos();
            }
        });
    }

	String s = "\images\"
	File F = new File(s) ;
	
    /**
     * Generate names of files
     */
    public static void loadLogos() {
        dragPanel.removeAll();
        for (int i = 0; i <= 47; i++) {
            String fileName = String.valueOf(i) + ".jpg";
            addNewLogo(fileName, i);
        }
        dragPanel.repaint();
    }

    public static void addNewLogo(String fileName, int i) {
        //Get resources from Directory or Jar file
        int vertical = 0;
    	Image img = Toolkit.getDefaultToolkit().createImage("images/"+fileName);
        
        //Creates a draggableImageComponent and adds loaded image
        DraggableLogoComponent logo = new DraggableLogoComponent();
        dragPanel.add(logo);//Adds this component to main container
        logo.setImage(img);//Sets image
        logo.setAutoSize(true);//The component get ratio w/h of source image
        logo.setOverbearing(true);//On click ,this panel gains lowest z-buffer
        logo.setBorder(new LineBorder(Color.black, 1));

       
        logo.setSize(50, 50);
//      location in a row with iteration i
        if (i > 9) {
        	vertical++;
        	System.out.println("vertical" + vertical);
        }
        logo.setLocation(i*50,vertical*50);
        
        dragPanel.repaint();
    }
}
